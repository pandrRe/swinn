var t;function e(e,n,u){var r=Object.assign({},n||{},e.default||{}),c=Object.assign({},e.flags,u),a=e.rule||t.Pascal,i=Object.keys(e.attributes||{}).reduce(function(t,e){return t[e]=function(t){var n;r=Object.assign({},r,((n={})[e]=t,n))},t},{}),o=Object.keys(e.attributes||{}).reduce(function(t,e){return t[e]=function(){return r[e]},t},{}),f=Object.keys(e.attributes||{}).reduce(function(t,e){return t[e]=function(){delete r[e]},t},{});var s={toggle:Object.keys(c).reduce(function(t,e){return t[e]=function(t){c[e]=t||!c[e]},t},{}),get:Object.keys(c).reduce(function(t,e){return t[e]=function(){return c[e]},t},{})};var g=a===t.Pascal?function(){return function(t,e,n){var u=t.name;return Object.keys(e).forEach(function(n){u+=" "+t.name+"-"+n+"-"+e[n]}),Object.keys(n||{}).forEach(function(e){n[e]&&(u+=" "+t.name+"-"+e)}),u}(e,r,c)}:function(){return function(t,e,n){var u=t.name;return Object.keys(e).forEach(function(t){u+=" "+t+"-"+e[t]}),Object.keys(n||{}).forEach(function(t){n[t]&&(u+=" "+t)}),u}(e,r,c)};return{set:i,get:o,unset:f,setMany:function(t){return Object.assign({},r,t)},displayClass:g,flags:s,setAttribute:function(t,e){i[t](e)},getAttribute:function(t){return o[t]()},unsetAttribute:function(t){f[t]()},toggleFlag:function(t){s.toggle[t]()},setFlag:function(t,e){s.toggle[t](e)},getFlag:function(t){return s.get[t]()}}}function n(t){return t}!function(t){t.Split=".category .attribute-value",t.Pascal=".category-attribute-value"}(t||(t={}));export{e as createStyle,t as Rule,n as category};
